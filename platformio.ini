; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = CForth
default_envs = host_makename, host_meta, host_forth, host_makeccalls, target_makebi
include_dir = build/platformio

[env]
platform = native
build_flags = -m32 -DBITS32 -DNOSYSCALL -D_FORTIFY_SOURCE=0 -lm -Isrc/cforth -Isrc/lib -Isrc/app/host-serial -I/usr/i686-linux-gnu/include
; debian or ubuntu package libc6-dev-i386-cross is required to compile 32-bit

[env:host_makename]
build_src_filter = +<cforth/makename.c>
extra_scripts =
    pre:scripts/m32.py
    post:scripts/build-0-makename-post.py
; writes prims.h vars.h init.x

[env:host_meta]
build_src_filter = +<cforth/meta.c> +<cforth/compiler.c> +<cforth/io.c> +<cforth/dictfile.c> +<cforth/mallocl.c> +<cforth/lineedit.c> +<cforth/getc-kbd.c>
extra_scripts =
    pre:scripts/m32.py
    post:scripts/build-1-meta-post.py
; writes kernel.dic

[env:host_forth]
build_src_filter = +<cforth/main.c> +<cforth/io.c> +<cforth/nullbi.c> +<cforth/dictfile.c> +<cforth/mallocl.c> +<cforth/lineedit.c> +<cforth/linux-kbd.c> +<lib/sha256.c> +<cforth/forth.c> +<cforth/compiler.c> +<cforth/syscall.c> +<cforth/floatops.c> +<app/host-serial/extend-posix.c>
extra_scripts =
    pre:scripts/m32.py
    post:scripts/build-2-forth-post.py
; writes forth.dic

[env:host_makeccalls]
build_src_filter = +<cforth/makeccalls.c>
extra_scripts =
    pre:scripts/m32.py
    post:scripts/build-3-makeccalls-post.py
; writes app.dic (host)

[env:target_makebi]
build_src_filter = +<cforth/embed/makebi.c>
extra_scripts =
    pre:scripts/m32.py
    post:scripts/build-4-makebi-post.py
; writes app.dic (embed) dicthdr.h dict.h userarea.h

[target]
framework = arduino
build_src_filter = +<cforth/forth.c> +<cforth/compiler.c> +<cforth/syscall.c> +<cforth/floatops.c> +<cforth/lineedit.c> +<cforth/embed/consio.c> +<cforth/embed/startapp.c> +<cforth/embed/rodict.c> +<cforth/embed/mallocembed.c> +<platform/arduino/extend.c> +<app/embed-linux/tmain.c> +<app/embed-linux/tdate.c> +<app/arduino/main.cpp>
target_build_flags = -DBITS32 -DNOSYSCALL -lm -Isrc/cforth
build_src_flags = !scripts/build-5-target-date.py

[env:adafruit_feather_m0]
extends = target
platform = atmelsam
board = adafruit_feather_m0
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:teensy31]
extends = target
platform = teensy
board = teensy31
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:teensy32]
extends = target
platform = teensy
board = teensy31 ; is the same board as far as PlatformIO is concerned
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:teensy35]
extends = target
platform = teensy
board = teensy35
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:teensy36]
extends = target
platform = teensy
board = teensy36
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:teensy40]
extends = target
platform = teensy
board = teensy40
build_flags = ${target.target_build_flags} -DMAXDICT=0x6000

[env:pico]
extends = target
platform = raspberrypi
board = pico
build_flags = ${target.target_build_flags} -DMAXDICT=0x30000

[env:esp01]
; this requires a smaller dictionary, because romdict is placed in dram,
; so before building cherry-pick f6a0abe ("esp01 - trim dictionary") or
; edit file src/cforth/load.fth and remove debug.fth cmdcom.fth locals.fth
; marker.fth environ.fth rstrace.fth sift.fth needs.fth callfind.fth
extends = target
platform = espressif8266
board = esp01
build_flags = ${target.target_build_flags} -DMAXDICT=0x2000

[env:featheresp32]
extends = target
platform = espressif32
board = featheresp32
build_flags = ${target.target_build_flags} -DMAXDICT=0x10000
